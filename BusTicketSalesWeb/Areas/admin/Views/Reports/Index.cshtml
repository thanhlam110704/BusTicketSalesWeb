@model IEnumerable<dynamic>

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<section class="content-header"style="margin:30px 0 80px 0">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Thống kê doanh thu</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/">Trang Chủ</a></li>
                    <li class="breadcrumb-item active">Doanh thu</li>
                </ol>
            </div>
        </div>
    </div>
    <!-- /.container-fluid -->
</section>

<!DOCTYPE html>
<html>
<head>
    <title>Monthly Revenue</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div style="width: 80%; margin: 0 auto;">
        <canvas id="revenueChart"></canvas>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var ctx = document.getElementById('revenueChart').getContext('2d');
            var revenueData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

            var labels = revenueData.map(function (item) {
                return item.Month + '/' + item.Year;
            });
            var data = revenueData.map(function (item) {
                return item.TotalRevenue;
            });

            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Tổng doanh thu',
                        data: data,
                        backgroundColor: function(context) {
                            var index = context.dataIndex;
                            var value = context.dataset.data[index];
                            return value > 10000 ? 'rgba(75, 192, 192, 0.6)' :
                                   value > 5000  ? 'rgba(255, 159, 64, 0.6)' :
                                                   'rgba(255, 99, 132, 0.6)';
                        },
                        borderColor: function(context) {
                            var index = context.dataIndex;
                            var value = context.dataset.data[index];
                            return value > 10000 ? 'rgba(75, 192, 192, 1)' :
                                   value > 5000  ? 'rgba(255, 159, 64, 1)' :
                                                   'rgba(255, 99, 132, 1)';
                        },
                        borderWidth: 1,
                        borderRadius: 5,
                        borderSkipped: false,
                    }]
                },
                options: {
                    plugins: {
                        legend: {
                            display: true,
                            labels: {
                                color: 'rgb(255, 99, 132)'
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed.y);
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(value);
                                }
                            }
                        },
                        x: {
                            ticks: {
                                maxRotation: 90,
                                minRotation: 45
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
